name: CI

on: [push]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            target: Linux
          - os: macos-latest
            target: Macos
          - os: windows-latest
            target: Windows

    env:
      # Deny warnings for all steps
      # (changing this flag triggers a complete rebuild, so it's helpful to define it globally)
      RUSTFLAGS: --deny warnings

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check formatting
        run: cargo fmt --check

      - name: Cargo build 'adblock' package
        run: cargo build --all-features --all-targets

      - name: Cargo build 'adblock' package (no default features)
        run: cargo build --no-default-features --all-targets

      - name: Cargo build 'adblock' package (wasm32)
        if: matrix.os == 'ubuntu-latest'
        run: rustup target add wasm32-unknown-unknown && cargo build --target wasm32-unknown-unknown

      - name: Build npm package
        run: npm ci

      - name: Cargo fuzz
        # Only runs on one runner for a few reasons:
        #    1. The 'fuzz' package has no entrypoints, befuddling the mvsc linker on Windows
        #    2. Mac CI Runners can be noticeably slower than the other two
        #    3. Assumption: fuzzing on multiple OS's isn't likely to catch bugs
        if: matrix.os == 'ubuntu-latest'
        run: .github/workflows/fuzz-all.sh
        shell: bash

      # audit dependencies for severe vulnerabilities
      # (to deny warnings in the future, note that cargo audit requires additional arguments)
      - name: Cargo audit
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install --force cargo-audit
          cargo generate-lockfile
          cargo audit

      - name: Cargo test 'adblock' package
        run: cargo test --all-features --tests --no-fail-fast

      - name: Cargo test 'adblock' package (release)
        run: cargo test --all-features --release --tests --no-fail-fast

      - name: Cargo test 'adblock' package (no default features)
        run: cargo test --no-default-features --features embedded-domain-resolver,full-regex-handling --tests --no-fail-fast

      - name: Cargo test 'adblock' package (asan)
        if: matrix.os == 'ubuntu-latest'
        run: |
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
          RUST_BACKTRACE=1 RUSTFLAGS="-Z sanitizer=address" \
          RUSTDOCFLAGS="-Z sanitizer=address" \
          cargo +nightly test -Zbuild-std --target x86_64-unknown-linux-gnu
